name: Playwright Tests

on:
  push:
    branches:
      - main # Auto run on push to branch main
  workflow_dispatch: # Manual execution from GitHub Actions web UI

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build projects
        run: dotnet build --configuration Release --no-restore

      - name: Cache Build Artifacts
        uses: actions/cache@v4
        with:
          path: |
            Automation/bin/Release/net8.0
            Reporting/bin/Release/net8.0
          key: ${{ runner.os }}-build-${{ hashFiles('**/*.csproj') }}

  test:
    runs-on: windows-latest
    needs: build
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore Build Artifacts
        uses: actions/cache@v4
        with:
          path: |
            Automation/bin/Release/net8.0
            Reporting/bin/Release/net8.0
          key: ${{ runner.os }}-build-${{ hashFiles('**/csproj') }}

      - name: Install browsers
        run: pwsh .\Automation\bin\Release\net8.0\playwright.ps1 install --with-deps chromium

      - name: Run Playwright tests
        run: dotnet test --settings .\Automation\Configuration\RunSettings\demo-chromium.runsettings

      - name: Generate report
        if: always()
        run: dotnet run --project .\Reporting\Reporting.csproj -- "C:\TestResults\test.xml"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: C:\TestResults
